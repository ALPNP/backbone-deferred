// backbone-deferred 0.1.0 
// (c) 2013 Alex Rhea 
// backbone-deferred may be freely distributed under the MIT license. 
// git://github.com/arhea/backbone-deferred.git 
(function(e,r){e.DeferredModel=e.Model.extend({fetch:function(s){s=s||{};var t=r.Deferred(),c=null,o=null;return s.success&&_.isFunction(s.success)&&(c=s.success),s.error&&_.isFunction(s.error)&&(o=s.error),e.Model.prototype.fetch.call(this,_.extend(s,{success:function(e,r,s){c&&c.apply(this,[e,r,s]),t.resolveWith(this,[e,r,s])},error:function(e,r,s){o&&o.apply(this,[e,r,s]),t.rejectWith(this,[e,r,s])}})),t.promise()},save:function(s){s=s||{};var t=r.Deferred(),c=null,o=null;return s.success&&_.isFunction(s.success)&&(c=s.success),s.error&&_.isFunction(s.error)&&(o=s.error),e.Model.prototype.save.call(this,this.attributes,_.extend(s,{success:function(e,r,s){c&&c.apply(this,[e,r,s]),t.resolveWith(this,[e,r,s])},error:function(e,r,s){o&&o.apply(this,[e,r,s]),t.rejectWith(this,[e,r,s])}})),t.promise()},destroy:function(s){s=s||{};var t=r.Deferred(),c=null,o=null;return s.success&&_.isFunction(s.success)&&(c=s.success),s.error&&_.isFunction(s.error)&&(o=s.error),e.Model.prototype.destroy.call(this,_.extend(s,{success:function(e,r,s){c&&c.apply(this,[e,r,s]),t.resolveWith(this,[e,r,s])},error:function(e,r,s){o&&o.apply(this,[e,r,s]),t.rejectWith(this,[e,r,s])}})),t.promise()}}),e.DeferredCollection=e.Collection.extend({fetch:function(s){s=s||{};var t=r.Deferred(),c=null,o=null;return s.success&&_.isFunction(s.success)&&(c=s.success),s.error&&_.isFunction(s.error)&&(o=s.error),e.Collection.prototype.fetch.call(this,_.extend(s,{success:function(e,r,s){c&&c.apply(this,[e,r,s]),t.resolveWith(this,[e,r,s])},error:function(e,r,s){o&&o.apply(this,[e,r,s]),t.rejectWith(this,[e,r,s])}})),t.promise()}})})(Backbone,jQuery);